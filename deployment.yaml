---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-latest
spec:
  replicas: 3
  selector:
    matchLabels:
      name: go-latest
  template:
    metadata:
      labels:
        name: go-latest
    spec:
      containers:
      - name: application
        image: greyhats13/demo:alpine
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: go-latest
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    name: go-latest
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: go-latest
  namespace: sit
  annotations:
    kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/cors-allow-headers: 'x-app-version,x-api-key,Authorization'
    # nginx.ingress.kubernetes.io/server-snippet: |-
    #   location ~* ^/(metrics|health|liveness|debug) {
    #   error_page 404 /404.html;
    #   }
    #   if ($http_user_agent !~* "(okhttp|Go-http|Java|axisnet|Postman)" ) { 
    #     return 405; 
    #   }
spec:
  rules:
    - host: go-latest.sit.api.axis.co.id
      http:
        paths:
          - backend:
              serviceName: go-latest
              servicePort: 8080